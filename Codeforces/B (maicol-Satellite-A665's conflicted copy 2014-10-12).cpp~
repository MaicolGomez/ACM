#include<bits/stdc++.h>
using namespace std;
#define pi (2.0*acos(0.0))
#define eps 1e-6
#define ll long long
#define inf (1<<29)
#define vi vector<int>
#define vll vector<ll>
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
#define all(v) v.begin() , v.end()
#define me(a,val) memset( a , val ,sizeof(a) )
#define pb(x) push_back(x)
#define pii pair<int,int> 
#define mp(a,b) make_pair(a,b)
#define Q(x) (x) * (x)
#define L(x) ((x<<1) + 1)
#define R(x) ((x<<1) + 2)
#define M(x,y) ((x+y)>>1)
#define fi first
#define se second
#define MOD 1000000007
#define ios ios::sync_with_stdio(0);
#define N 100001

int main(){
    int n , m;
    while( cin >> n >> m ){
        if( n == 0 ){
            cout << 0 << " " << 1 << "\n";
            cout << 0 << " " << m << "\n";
            cout << 0 << " " << 0 << "\n";
            cout << 0 << " " << m - 1 << "\n";
            continue;
        }
        if( m == 0 ){
            cout << 1 << " " << 0 << "\n";
            cout << n << " " << 0 << "\n";
            cout << 0 << " " << 0 << "\n";
            cout << n - 1 << " " << 0 << "\n";
            continue;
        }
        double ans = 0;
        vector< pii > ret;
        vector< pii > v;
        if( n <= m and m >= 3 ){
            v.pb( mp( 0 , 1 ) );
            v.pb( mp( 0 , m ) );
            v.pb( mp( 0 , 0 ) );
            v.pb( mp( 0 , m - 1 ) );
            double s = 0;
            for(int i = 1 ; i < 4 ; i++)
                s += sqrt( Q( v[i].fi - v[i-1].fi ) + Q( v[i].se - v[i-1].se ) );
            
            if( s > ans ){
                ans = s;
                ret = v;
            }
        }
        else if( n > m and n >= 3 ){
            v.clear();
            v.pb( mp( 1 , 0 ) );
            v.pb( mp( n , 0 ) );
            v.pb( mp( 0 , 0 ) );
            v.pb( mp( n - 1 , 0 ) );
            double s = 0;
            for(int i = 1 ; i < 4 ; i++)
                s += sqrt( Q( v[i].fi - v[i-1].fi ) + Q( v[i].se - v[i-1].se ) );
            
            if( s > ans ){
                ans = s;
                ret = v;
            }
        }
        v.clear();
        v.pb( mp( 0 , 0 ) );
        v.pb( mp( n , 0 ) );
        v.pb( mp( 0 , m ) );
        v.pb( mp( n , m ) );
        sort( all(v) );
        do{
            double s = 0;
            for(int i = 1 ; i < 4 ; i++)
                s += sqrt( Q( v[i].fi - v[i-1].fi ) + Q( v[i].se - v[i-1].se ) );
            
            if( s > ans ){
                ans = s;
                ret = v;
            }
        }while( next_permutation( all(v) ) );
        int g = __gcd( n , m );
        int x = n / g;
        int y = m / g;
        if( n <= m ){
            if( g > 1 and x != n - x and y != m - y ){
                vector< pii > t;
                t.pb( mp(x,y) );
                t.pb( mp(n,m) );
                t.pb( mp(0,0) );
                t.pb( mp(n-x,m-y) );
                double s = 0;
                for(int i = 1 ; i < 4 ; i++)
                    s += sqrt( Q( t[i].fi - t[i-1].fi ) + Q( t[i].se - t[i-1].se ) );
                
                if( s > ans ){
                    ans = s;
                    ret = t;
                }
            }
        }
        else{
            if( g > 1 and x != n - x and y != m - y ){
                vector< pii > t;
                t.pb( mp(x,m - y) );
                t.pb( mp(0,m) );
                t.pb( mp(n,0) );
                t.pb( mp(n-x,y) );
                double s = 0;
                for(int i = 1 ; i < 4 ; i++)
                    s += sqrt( Q( t[i].fi - t[i-1].fi ) + Q( t[i].se - t[i-1].se ) );
                
                if( s > ans ){
                    ans = s;
                    ret = t;
                }
            }
        }
        
        for(int i = 0 ; i < 4 ; i++)
            cout << ret[i].fi << " " << ret[i].se << "\n";
        
        
    }
    return 0;
}
