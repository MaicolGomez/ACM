#include<bits/stdc++.h>
using namespace std;
#define pi (2.0*acos(0.0))
#define eps 1e-6
#define ll long long
#define inf (1<<29)
#define vi vector<int>
#define vll vector<ll>
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
#define all(v) v.begin() , v.end()
#define me(a,val) memset( a , val ,sizeof(a) )
#define pb(x) push_back(x)
#define pii pair<int,int> 
#define mp(a,b) make_pair(a,b)
#define Q(x) (x) * (x)
#define L(x) ((x<<1) + 1)
#define M(x,y) ((x+y)>>1)
#define fi first
#define se second
#define MOD 1000000007
#define ios ios::sync_with_stdio(0);
#define N 305

int n , u , v;
int x[N] , y[N] , P[N] , C[N][N];
vi d[2];
int test = 1 , S , T;
bool vis[N];


int cross(pii A,pii B){
    return A.fi * B.se - A.se * B.fi;
}

int dfs(int x,int cap){
    if( x == T ) return cap;
    if( vis[x] ) return 0;
    vis[x] = 1;
    for(int i = 0 ; i < n ; i++){
        if( C[x][i] ){
            int r = dfs( i , min( cap , C[x][i] ) );
            if( r ){
                C[x][i] -= r;
                C[i][x] += r;
                return r;
            }
        }
    }
    return 0;
}

int maxFlow(){
    int flow = 0;
    while( 1 ){
        me(vis,0);
        int r = dfs( S , inf );
        if( !r ) break;
        flow += r;
    }
    return flow;
}

void build(pii A,int R){
    d[0].clear();
    d[1].clear();
    me(C,0);
    
    for(int i = 0 ; i < n ; i++){
        if( P[i] == 0 ) continue;
        if( cross( A , mp( u - x[i] , v - y[i] ) ) < 0 )
            d[0].pb( i );
        else d[1].pb( i );
    }
    
    if( d[0].size() > d[1].size() ) swap( d[0] , d[1] );
    S = n , T = n + 1;
    for(int i = 0 ; i < d[0].size() ; i++){
        C[ S ][ d[0][i] ] = 1;
        for(int j = 0 ; j < d[1].size() ; j++){
            C[ d[1][j] ][ T ] = 1;
            if( Q( x[ d[0][i] ] - x[ d[1][j] ] ) + Q( y[ d[0][i] ] - y[ d[1][j] ] ) <= R * R and P[ d[0][i] ] > P[ d[1][j] ] )
                C[ d[0][i] ][ d[1][j] ] = 1;
        }
    }
    n = n + 2;
    
    printf("Case %d: %d\n", test++, maxFlow() );
}

int main(){
    while( ~sc(n) == 1 and n ){
        for(int i = 0 ; i < n ; i++)
            scanf("%d%d%d",&x[i],&y[i],&P[i]);
        
        int a , b , R;
        scanf("%d%d%d",&a,&b,&R); a--,b--;
        pii A = mp( x[a] - x[b] , y[a] - y[b] );
        u = x[a] , v = y[a];       
        build( A , R );
    }
    return 0;
}
