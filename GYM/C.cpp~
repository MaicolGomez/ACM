#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<cmath>
#include<algorithm>
#include<climits>
#include<set>
#include<deque>
#include<queue>
#include<map>
#include<climits>
#include<string>
#include<stack>
#include<sstream>
using namespace std;
#define pi (2.0*acos(0.0))
#define eps 1e-6
#define ll long long
#define inf (1<<29)
#define vi vector<int>
#define vll vector<ll>
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
#define all(v) v.begin() , v.end()
#define me(a,val) memset( a , val ,sizeof(a) )
#define pb(x) push_back(x)
#define pii pair<int,int> 
#define mp(a,b) make_pair(a,b)
#define Q(x) (x) * (x)
#define L(x) ((x<<1) + 1)
#define R(x) ((x<<1) + 2)
#define M(x,y) ((x+y)>>1)
#define fi first
#define se second
#define MOD 10009
#define N 100005

int A[N] , R , C , ct;
char s[N];
vector< string  > m;
vector< vector<bool> > vis;
int dx[4] = { 1 , -1 , 0 , 0 };
int dy[4] = { 0 , 0 , 1 , -1 };

void dfs(int x,int y){
    //cout << x << "  " << y << endl;
    vis[x][y] = 1;
    for(int i = 0 ; i < 4 ; i++){
        int u = x + dx[i] , v = y + dy[i];
        if( u >= 0 && u < R && v >= 0 && v < C && m[u][v] == '1' && !vis[u][v] ){
            ct++;
            dfs( u , v );
        }
    }
}

int main(){
    while( scanf("%d%d",&R,&C) == 2 ){
        m.clear();
        vis.clear();
        for(int i = 0 ; i < R ; i++){
            vector<bool> nu;
            for(int j = 0 ; j < C ; j++)
                nu.pb( 0 );
            
            vis.pb(nu);
            scanf("%s",s);
            m.pb( s );
        }
        int ans = 0 , maxi = 0;
        ct = 0;
        for(int i = 0 ; i < R ; i++){
            for(int j = 0 ; j < C ; j++){
                if( m[i][j] == '1' && !vis[i][j] ){
                    ct = 1;
                    dfs( i , j );
                    ans++;
                    maxi = max( maxi , ct );
                }
            }
        }
        printf("%d %d\n",ans,maxi);
    }    
    return 0;
}
